#!/bin/bash

# # # # # # # # # # # # # # # # # # # # 
#
# Wolfgang Baird 
# Maintained By	: Wolfgang Baird
# Version		: 2.4.1
# Updated		: Jan / 7 / 2014
#
# # # # # # # # # # # # # # # # # # # # 

restart_SIMBL() {
	restart_count=$(more /tmp/dmpipe)
	if [[ "$restart_count" == "QUIT" ]]; then
		echo "Shutting down process"
		sleep 2
		exit
	else
		restart_count=$((restart_count + 1))
		echo $restart_count >/tmp/dmpipe
		echo "restart count is now : "$restart_count
		killall "SIMBL Agent"
		sleep 1
		exec "$simbl_path" &
	fi	
} # Restart SIMBL Agent

crash_monitor() {
	echo "Starting crash loop monitoring"
	sleep 35	
	rs_count=$(more /tmp/dmpipe)
	if [[ $rs_count -gt 5 ]]; then
		echo "QUIT" >/tmp/dmpipe
	else
		echo 0 >/tmp/dmpipe
	fi 
	echo "Stopping crash loop monitoring"
} # Watch for crash loop

check_for_updates() {
	update_auto_install=$(defaults read org.w0lf.cDock autoInstall 2>/dev/null || { defaults write org.w0lf.cDock autoInstall 0; echo -n 0; } ) # Automatic update installation
	cur_date=$(date "+%y%m%d")
	lastupdateCheck=$(defaults read org.w0lf.cDock lastupdateCheck 2>/dev/null || defaults write org.w0lf.cDock lastupdateCheck 0 2>/dev/null)
	weekly=$((lastupdateCheck + 7))
	beta_updates=$(defaults read org.w0lf.cDock betaUpdates 2>/dev/null || echo -n 0)
	
	# Beta or Stable updates
	if [[ $beta_updates -eq 1 ]]; then
		# Beta urls
		dlurl="http://sourceforge.net/projects/cdock/files/cDock%20Beta/current.zip/download"
		verurl="http://sourceforge.net/projects/cdock/files/cDock%20Beta/versionBeta.txt/download"
		logurl="http://sourceforge.net/projects/cdock/files/cDock%20Beta/versionInfoBeta.txt/download"
	else
		# Stable urls
		dlurl="http://sourceforge.net/projects/cdock/files/latest/download"
		verurl="http://sourceforge.net/projects/cdock/files/version.txt/download"
		logurl="http://sourceforge.net/projects/cdock/files/versionInfo.txt/download"
	fi
	
	# If it's been a week since we last checked.
	if [[ "$weekly" = "$cur_date" ]]; then
		defaults write "org.w0lf.cDock" "lastupdateCheck" "${cur_date}"
		"$wupdt_path" "c" "$cdock_path" "org.w0lf.cDock" $curver $verurl $logurl $dlurl $update_auto_install &
	fi	
} # Update checking

#
#	Variables
#

total_count=0
restart_count=0
dockpid=0

#
#	Paths
#

resource_folder=$(cd "${0%/*}" && echo $PWD)
for i in {1..4}; do resource_folder=$(dirname "$resource_folder"); done
simbl_path="$resource_folder/helpers/SIMBL.app/Contents/MacOS/SIMBL Agent"
wupdt_path="$resource_folder/updates/wUpdater.app/Contents/MacOS/wUpdater"

#
#	App execution
#

echo $restart_count >/tmp/dmpipe
exec "$simbl_path" &
update_auto_check=$(defaults read org.w0lf.cDock autoCheck 2>/dev/null || { defaults write org.w0lf.cDock autoCheck 1; echo -n 1; } )
if [[ $update_auto_check == 1 ]]; then check_for_updates; fi

# Main monitor loop
while [ 1 ]; do
	# Grab dockID
	newid=$(ps ax | grep [M]acOS/Dock | sed -e 's/^[ \t]*//' | cut -f1 -d" ")
	
	# If dock has been restarted it will have a new ID
	if [[ $newid != $dockpid ]]; then
		dockpid=$newid
		restart_SIMBL
		if [[ $restart_count -eq 1 ]]; then crash_monitor; fi &
		sleep 4
	else
		sleep 2 # Sleep time between checks
	fi
done

# END
